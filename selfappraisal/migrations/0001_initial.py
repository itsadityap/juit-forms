# Generated by Django 4.2.4 on 2023-08-23 19:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import selfappraisal.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'HOD'), (2, 'Dean'), (3, 'VC'), (4, 'Faculty')], default=4)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SelfAppraisalForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=100, verbose_name='2. Department')),
                ('qualifications', models.CharField(blank=True, max_length=100, null=True, verbose_name='3. Qualifications')),
                ('present_designation', models.CharField(blank=True, max_length=100, null=True, verbose_name='4. Present Designation')),
                ('date_of_joining', models.DateField(blank=True, null=True, verbose_name='5. University Joining Date')),
                ('first_designation', models.CharField(blank=True, max_length=100, null=True, verbose_name='6. First Designation')),
                ('present_pay_scale_and_pay', models.CharField(blank=True, max_length=100, null=True, verbose_name='7. Present Pay Scale & Pay')),
                ('areas_of_specialization', models.TextField(blank=True, null=True, verbose_name='8. Areas of Specialization and Current Interest')),
                ('additional_qualifications', models.TextField(blank=True, null=True, verbose_name='9. Additional Qualification acquired during the year (Give full details)')),
                ('pursuing_higher_studies', models.TextField(blank=True, null=True, verbose_name='10. Pursuing Higher Studies (Give full details)')),
                ('learning_methodology', models.TextField(blank=True, null=True, verbose_name='Participatory/Innovative Teaching Learning Methodologies used (give brief details)')),
                ('modifications_in_teaching', models.TextField(blank=True, null=True, verbose_name='Any Modification/ Addition to syllabus (give brief details)')),
                ('beyond_syllabus', models.TextField(blank=True, null=True, verbose_name='Any Coverage/ Introduction beyond syllabus ( give brief details )')),
                ('projects_guided', models.PositiveIntegerField(blank=True, null=True)),
                ('students_guided', models.PositiveIntegerField(blank=True, null=True)),
                ('students_extra_curricular', models.TextField(blank=True, verbose_name='(A) Contribution/ Participation in Students Extra & Co- Curricular activities:')),
                ('departmental_activities', models.TextField(blank=True, verbose_name='(B) Contribution/ Participation in Departmental Activities & Development:')),
                ('institute_activities', models.TextField(blank=True, verbose_name='(C) Contribution/ Participation in Institute Activities & Development:')),
                ('invited_lectures', models.TextField(blank=True, verbose_name='(D) Special/ Extension/ Expert/Invited Lectures Delivered, Give Details:')),
                ('articles_monographs', models.TextField(blank=True, verbose_name='(E) Articles, Monographs, Technical Reports, Reviews Written, Give Details:')),
                ('member_of_professional_bodies', models.TextField(blank=True)),
                ('any_other_information', models.TextField(blank=True)),
                ('list_of_enclosures', models.TextField(blank=True)),
                ('self_approval', models.BooleanField(default=False)),
                ('hod_approval', models.BooleanField(default=False)),
                ('hod_remarks', models.TextField(blank=True)),
                ('dean_approval', models.BooleanField(default=False)),
                ('dean_remarks', models.TextField(blank=True)),
                ('vc_approval', models.BooleanField(default=False)),
                ('vc_remarks', models.TextField(blank=True)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResearchProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Title of Research Project/Consultancy Work')),
                ('sponsoring_agency', models.TextField(blank=True, null=True, verbose_name='Details of Sponsoring Agency')),
                ('duration', models.CharField(blank=True, max_length=100, null=True, verbose_name='Duration')),
                ('sanction_date', models.DateField(blank=True, null=True, verbose_name='Sanction Date')),
                ('status', models.CharField(blank=True, max_length=100, null=True, verbose_name='Status')),
                ('amount_sanctioned', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount Sanctioned')),
                ('chief_investigator', models.CharField(blank=True, max_length=100, null=True, verbose_name='Chief or Co Investigator Specify')),
                ('api_score', models.PositiveIntegerField(blank=True, null=True, verbose_name='Self Assessed API Score')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks by the HoD')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='selfappraisal.selfappraisalform')),
            ],
        ),
        migrations.CreateModel(
            name='ResearchGuidance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_number', models.CharField(max_length=100, verbose_name='Enrollment Number')),
                ('name_of_student', models.CharField(max_length=100, verbose_name='Name of the Student')),
                ('title_of_thesis', models.CharField(max_length=200, verbose_name='Title of Thesis/Dissertation/Project')),
                ('names_of_joint_supervisors', models.CharField(max_length=200, verbose_name='Names of Joint Supervisors')),
                ('level', models.CharField(choices=[('PhD', 'PhD'), ('DD', 'DD'), ('M Tech', 'M Tech'), ('M Phil', 'M Phil'), ('MS', 'MS')], max_length=100, verbose_name='Level')),
                ('status', models.CharField(choices=[('Completed', 'Completed'), ('Ongoing', 'Ongoing')], max_length=100, verbose_name='Status')),
                ('api_score', models.PositiveIntegerField(blank=True, null=True, verbose_name='Self Assessed API Score')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks by the HoD')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='selfappraisal.selfappraisalform')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publication_choice', models.PositiveSmallIntegerField(choices=[(1, 'Research Papers Published/ Presented'), (2, 'Books, Chapters in Books Written')])),
                ('author_names', models.TextField(verbose_name='Names of All Authors in Order as in Publication')),
                ('title_reference', models.TextField(verbose_name='Title and Complete Reference in IEEE Style')),
                ('publication_type', models.CharField(max_length=100, verbose_name='Type of Publication/Conference etc.')),
                ('api_score', models.PositiveIntegerField(blank=True, null=True, verbose_name='Self Assessed API Score')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks by the HoD')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='selfappraisal.selfappraisalform')),
            ],
        ),
        migrations.CreateModel(
            name='KnowledgeResources',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_code', models.CharField(max_length=20)),
                ('resources_consulted', models.TextField()),
                ('resources_prescribed', models.TextField()),
                ('additional_resources_provided', models.TextField()),
                ('self_assessed_api_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='selfappraisal.selfappraisalform')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('sponsoring_agency', models.CharField(blank=True, max_length=200, null=True)),
                ('organization', models.CharField(blank=True, max_length=200, null=True)),
                ('place_held', models.CharField(blank=True, max_length=200, null=True)),
                ('attended_organized', models.CharField(blank=True, choices=[('Attended', 'Attended'), ('Organized', 'Organized')], max_length=10, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='selfappraisal.selfappraisalform')),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationDuties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('q_papers_set', models.JSONField(blank=True, default=selfappraisal.models.EvaluationDuties.default_json, null=True)),
                ('ab_evaluated', models.JSONField(blank=True, default=selfappraisal.models.EvaluationDuties.default_json, null=True)),
                ('students_examined', models.JSONField(blank=True, default=selfappraisal.models.EvaluationDuties.default_json, null=True)),
                ('invigilation_duties', models.JSONField(blank=True, default=selfappraisal.models.EvaluationDuties.default_json_duties, null=True)),
                ('api_score', models.IntegerField(blank=True, null=True)),
                ('hod_remarks', models.TextField(blank=True, null=True)),
                ('form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='selfappraisal.selfappraisalform')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_type', models.PositiveSmallIntegerField(choices=[(1, 'ODD SEM'), (2, 'EVEN SEM')], default=1)),
                ('course_code', models.CharField(max_length=20)),
                ('course_title', models.CharField(max_length=200)),
                ('contact_hours_per_week', models.PositiveIntegerField()),
                ('total_hours_scheduled', models.PositiveIntegerField()),
                ('total_hours_engaged', models.PositiveIntegerField()),
                ('self_assessed_api_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('remarks', models.TextField(blank=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='selfappraisal.selfappraisalform')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='department',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='selfappraisal.department'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
